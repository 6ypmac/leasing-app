
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$leasing-app-primary: mat.define-palette(mat.$cyan-palette);
$leasing-app-accent: mat.define-palette(mat.$teal-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$leasing-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$leasing-app-theme: mat.define-light-theme((
  color: (
    primary: $leasing-app-primary,
    accent: $leasing-app-accent,
    warn: $leasing-app-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($leasing-app-theme);

/* You can add global styles to this file, and also import other style files */

$body-bg-color: #fafafa;

html, body { height: 100%; }
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: $body-bg-color;
}

.content {

  &-card {
    padding-top: 1rem;

    &:first-child {
      padding-top: 0;
    }
  }
}

.wrapper {

  &-main,
  &-form {

    form,
    .mat-card,
    .mat-card form {

      & > .mat-card-actions,
      & > .mat-dialog-actions {

        padding-bottom: 0;

        &:last-child,
        &-align-end {
          margin-bottom: 0;

          button {
            margin: 0 .5rem;
          }
        }
      }

      & .mat-dialog-actions {
        min-height: 0;
        margin: -0.5rem;
      }
    }
  }

  &-main {
    max-width: 75rem;
    padding: 1rem;
    margin: auto;
  }

  &-form {

    > form {
      display: flex;
      flex-direction: column;
      margin: 0;

        .mat-form-field {
          width: 100%;
        }

        &.form-all-size {

          .mat-form-field {
            width: calc(100% - 6rem);
          }
        }
    }

    &-field {
      display: flex;
      width: 66%;
      min-width: 13.25rem;

      &-actions {

        & > button {
          margin-top: .25rem;
          margin-left: .5rem;
        }
      }
    }
  }
}

.mat-form-field {
  &-readonly {
    position: relative;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 1.34375em;
      left: 0;
    }
  }
}

.warning-snackbar {
  color: rgba(0, 0, 0, 0.87);
  background-color: #ffea00;

  .mat-button {
    color: rgba(0, 0, 0, 0.87);
    background-color: #ffd600;
  }
}
